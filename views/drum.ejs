<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">

    <title>Baby's First Drum Machine</title>
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Averia+Serif+Libre:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap');

      html, body {
        margin: 0;
        padding: 0;
        width: 100%;
        height: 100%;
        background-color: #111;
        color: #CCC;
        font-family: "Averia Serif Libre", serif;
        font-size: 16px;
        font-weight: normal;
        line-height: 1.5;
        text-align: center;
        overflow: hidden;
      }
      #screen {
        width: 100%;
        height: 100%;
        margin: 0 auto;
        display: block;
        justify-content: center;
        align-items: center;
        text-align: center;
      }
      .drumbtns {
          display: grid;
          grid-template-columns: repeat(4, 1fr);
          grid-gap: 10px;
          height: calc(100% - 40px);
          margin: 20px;
          align-items: center;
      }
      .drumbtn {
          text-align: center;
          font-size: 1.5em;
          border-radius: 5px;
          cursor: pointer;
          font-family: "Averia Serif Libre", serif;
          display: block;
          transition-duration: 200ms;
          text-align: center;
          height: 100%;
          position: relative;
          color: #111;
      }
      .center {
        margin: 0;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        pointer-events: none;
      }
    </style>

</head>
<body>
      <div id="screen">
          <div class="drumbtns">
            <div class="drumbtn red" id="a-1"><p class="center">1</p></div>
            <div class="drumbtn lime" id="b-1"><p class="center">1</p></div>
            <div class="drumbtn blue" id="c-1"><p class="center">1</p></div>
            <div class="drumbtn purple" id="d-1"><p class="center">1</p></div>

            <div class="drumbtn red" id="a-2"><p class="center">2</p></div>
            <div class="drumbtn lime" id="b-2"><p class="center">2</p></div>
            <div class="drumbtn blue" id="c-2"><p class="center">2</p></div>
            <div class="drumbtn purple" id="d-2"><p class="center">2</p></div>

            <div class="drumbtn red" id="a-3"><p class="center">3</p></div>
            <div class="drumbtn lime" id="b-3"><p class="center">3</p></div>
            <div class="drumbtn blue" id="c-3"><p class="center">3</p></div>
            <div class="drumbtn purple" id="d-3"><p class="center">3</p></div>

            <div class="drumbtn red" id="a-4"><p class="center">4</p></div>
            <div class="drumbtn lime" id="b-4"><p class="center">4</p></div>
            <div class="drumbtn blue" id="c-4"><p class="center">4</p></div>
            <div class="drumbtn purple" id="d-4"><p class="center">4</p></div>

            <div class="drumbtn red" id="a-5"><p class="center">5</p></div>
            <div class="drumbtn lime" id="b-5"><p class="center">5</p></div>
            <div class="drumbtn blue" id="c-5"><p class="center">5</p></div>
            <div class="drumbtn purple" id="d-5"><p class="center">5</p></div>

            <div class="drumbtn red" id="a-6"><p class="center">6</p></div>
            <div class="drumbtn lime" id="b-6"><p class="center">6</p></div>
            <div class="drumbtn blue" id="c-6"><p class="center">6</p></div>
            <div class="drumbtn purple" id="d-6"><p class="center">6</p></div>

            <div class="drumbtn red" id="a-7"><p class="center">7</p></div>
            <div class="drumbtn lime" id="b-7"><p class="center">7</p></div>
            <div class="drumbtn blue" id="c-7"><p class="center">7</p></div>
            <div class="drumbtn purple" id="d-7"><p class="center">7</p></div>

            <div class="drumbtn red" id="a-8"><p class="center">8</p></div>
            <div class="drumbtn lime" id="b-8"><p class="center">8</p></div>
            <div class="drumbtn blue" id="c-8"><p class="center">8</p></div>
            <div class="drumbtn purple" id="d-8"><p class="center">8</p></div>
          </div>
    </div>
    <script>
      const drums = document.querySelectorAll('.drumbtn');
      let pattern;

      let red = 'rgb(255,0,109)';
      let lime = 'rgb(173,255,2)';
      let blue = 'rgb(1, 190, 254)';
      let purple = 'rgb(143, 0, 255)';
      let colors = [red, lime, blue, purple];
      const classes = ['.red', '.lime', '.blue', '.purple'];

      function recolor(preset) {
        if(preset == 'preset1') {
          red = 'rgb(255, 173, 173)';
          lime = 'rgb(225, 255, 170)';
          blue = 'rgb(155, 246, 255)';
          purple = 'rgb(189, 178, 255)';
        } else if(preset == 'preset2') {
          red = 'rgb(230, 70, 70)';
          lime = 'rgb(140, 180, 20)';
          blue = 'rgb(25, 130, 196)';
          purple = 'rgb(130, 70, 147)';
        } else {
          red = 'rgb(255,0,109)';
          lime = 'rgb(173,255,2)';
          blue = 'rgb(1, 190, 254)';
          purple = 'rgb(143, 0, 255)';
        }

        colors[0] = red;
        colors[1] = lime;
        colors[2] = blue;
        colors[3] = purple;
      }

      function colorize() {
        for (let i = 0; i < colors.length; i++) {
          document.querySelectorAll(classes[i]).forEach((btn, index) => {
            if(btn.classList.contains('selected')) {
              btn.style.backgroundColor = colors[i];
              btn.style.border = `1px solid ${colors[i]}`;
              btn.style.color = '#111';
            } else {
              btn.style.backgroundColor = '#111';
              btn.style.border = `1px solid ${colors[i]}`;
              btn.style.color = colors[i];
            }
            console.log(classes[i], ': ', index);
          });
        }
      };

      const webSocket = new WebSocket('wss://drum.patternbased.com/ws');
      webSocket.onmessage = (event) => {
        // console.log(event)
        if(isJson(event.data)) { // If its JSON, parse it
          const msg = JSON.parse(event.data);
          if(msg.message == 'disconnect') {
            console.log('Redirecting to thank you page...');
            window.location.href = msg.redirectUrl;
          }
          if (msg.message === 'reconnectLater') {
            console.log('Redirecting to redirect later page...');
            window.location.href = msg.redirectUrl;
          }
          
          // const len = msg.length;
          for(var i in msg) {
            let st = JSON.stringify(i).slice(1, -1);
            const theId = document.querySelector(`#${st}`);
            if (msg[i] == 1.0) {
              if(!theId.classList.contains('selected')) {
                theId.classList.add('selected');
              }
            } else {
              if(theId.classList.contains('selected')) {
                theId.classList.remove('selected');
              }
            }
          }
          pattern = msg;
          console.log('Updated: ',msg, pattern);
          colorize();
        } else { // If its not JSON, do below
          if(event.data.includes('preset')) {
            console.log("This is color:", event.data);
            recolor(event.data);
            colorize();
          } else {
            console.log("Not JSON: ",event.data);
          }
        }
      };

      webSocket.addEventListener("open", () => {
        console.log("We are connected");
        webSocket.send("request");
      });
      
      function isJson(str) {
      try {
        JSON.parse(str);
      } catch (e) {
        return false;
      }  
      return true;
    }

    drums.forEach(drum => {
        drum.addEventListener('click', e => {
          const drumName = e.target.id;
          console.log(drumName);
          if(!drumName == "") {
            let theCurrentPattern = pattern;
            if (drum.classList.contains('selected')) {
              drum.classList.remove('selected');
              theCurrentPattern[`${drumName}`] = 0.0;
              console.log('off: ', theCurrentPattern[`${drumName}`]);
            } else {
              drum.classList.add('selected');
              theCurrentPattern[`${drumName}`] = 1.0;
              console.log('on: ', theCurrentPattern[`${drumName}`]);
            }
            console.log(theCurrentPattern);
            webSocket.send(JSON.stringify(theCurrentPattern));
            pattern = theCurrentPattern;
          }
          colorize();
        });
      });

    // Function to remove the ?qr=valid from the URL
    function removeQrParam() {
      const url = new URL(window.location);
      url.searchParams.delete('qr'); // Remove 'qr' parameter
      window.history.replaceState({}, document.title, url.pathname); // Update URL without reloading
    }

    // Call the function when the page loads
    removeQrParam();
    </script>
</body>
</html>
